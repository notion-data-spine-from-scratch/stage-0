# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: notion_ot.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 5, 29, 0, "", "notion_ot.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0fnotion_ot.proto\x12\tnotion_ot"T\n\nOpsRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\t\x12\x11\n\tclient_id\x18\x02 \x01(\t\x12\x14\n\x0c\x62\x61se_version\x18\x03 \x01(\x03\x12\x0b\n\x03ops\x18\x04 \x03(\x0c"-\n\x0bOpsResponse\x12\x0f\n\x07version\x18\x01 \x01(\x03\x12\r\n\x05patch\x18\x02 \x03(\x0c"$\n\x10SubscribeRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\t2\x88\x01\n\x08NotionOT\x12\x38\n\x07PushOps\x12\x15.notion_ot.OpsRequest\x1a\x16.notion_ot.OpsResponse\x12\x42\n\tSubscribe\x12\x1b.notion_ot.SubscribeRequest\x1a\x16.notion_ot.OpsResponse0\x01\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "notion_ot_pb2", _globals)
if not _descriptor._USE_C_DESCRIPTORS:
    DESCRIPTOR._loaded_options = None
    _globals["_OPSREQUEST"]._serialized_start = 30
    _globals["_OPSREQUEST"]._serialized_end = 114
    _globals["_OPSRESPONSE"]._serialized_start = 116
    _globals["_OPSRESPONSE"]._serialized_end = 161
    _globals["_SUBSCRIBEREQUEST"]._serialized_start = 163
    _globals["_SUBSCRIBEREQUEST"]._serialized_end = 199
    _globals["_NOTIONOT"]._serialized_start = 202
    _globals["_NOTIONOT"]._serialized_end = 338
# @@protoc_insertion_point(module_scope)
