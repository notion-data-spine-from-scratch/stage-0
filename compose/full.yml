# compose/full.yml
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: notion
      POSTGRES_PASSWORD: notion
      POSTGRES_DB: notion
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "notion"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    image: stage0-api
    environment:
      DATABASE_URL: postgresql+asyncpg://notion:notion@db:5432/notion
      REDIS_URL: redis://redis:6379/0
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8000:8000"
    volumes:
      - ../scripts:/home/appuser/code/scripts:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  meili:
    image: getmeili/meilisearch:v1.8
    environment:
      MEILI_MASTER_KEY: masterKey
    ports:
      - "7700:7700"

  search-worker:
    build:
      context: ..
      dockerfile: Dockerfile
    command: ["python", "-m", "search_worker.worker"]
    environment:
      DATABASE_URL: postgresql+asyncpg://notion:notion@db:5432/notion
      REDIS_URL: redis://redis:6379/0
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MEILI_URL: http://meili:7700
      MEILI_MASTER_KEY: masterKey
      PYTHONPATH: /home/appuser/code
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_healthy
      meili:
        condition: service_started

  asset-proxy:
    build:
      context: ../services/asset-proxy
    ports:
      - "8081:8080"
    depends_on:
      - localstack

  kratos:
    image: oryd/kratos:v1.1.0
    volumes:
      - ../services/auth:/etc/config:ro
    command: ["serve", "--dev", "/etc/config/kratos.yml"]
    ports:
      - "4433:4433"
      - "4434:4434"

  stripe-mock:
    image: stripe/stripe-mock:v0.187.0
    ports:
      - "12111:12111"

  localstack:
    image: localstack/localstack:3
    environment:
      - SERVICES=s3
    ports:
      - "4566:4566"

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ../services/metrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_NAME: postgresql://notion:notion@db:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
  crdt:
    build:
      context: ..
      dockerfile: Dockerfile.crdt
    image: notion-crdt:latest
    ports:
      - "50051:50051"
    depends_on:
      api:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db_data:
  zookeeper_data:
  zookeeper_log:
